function x(){}const A=t=>t;function w(t,n){for(const e in n)t[e]=n[e];return t}function E(t){return t()}function B(){return Object.create(null)}function j(t){t.forEach(E)}function C(t){return typeof t=="function"}function D(t,n){return t!=t?n==n:t!==n||t&&typeof t=="object"||typeof t=="function"}let i;function F(t,n){return t===n?!0:(i||(i=document.createElement("a")),i.href=n,t===i.href)}function P(t){return Object.keys(t).length===0}function q(t,...n){if(t==null){for(const c of n)c(void 0);return x}const e=t.subscribe(...n);return e.unsubscribe?()=>e.unsubscribe():e}function S(t,n,e){t.$$.on_destroy.push(q(n,e))}function U(t,n,e,c){if(t){const o=m(t,n,e,c);return t[0](o)}}function m(t,n,e,c){return t[1]&&c?w(e.ctx.slice(),t[1](c(n))):e.ctx}function G(t,n,e,c){if(t[2]&&c){const o=t[2](c(e));if(n.dirty===void 0)return o;if(typeof o=="object"){const l=[],h=Math.max(n.dirty.length,o.length);for(let u=0;u<h;u+=1)l[u]=n.dirty[u]|o[u];return l}return n.dirty|o}return n.dirty}function H(t,n,e,c,o,l){if(o){const h=m(n,e,c,l);t.p(h,o)}}function I(t){if(t.ctx.length>32){const n=[],e=t.ctx.length/32;for(let c=0;c<e;c++)n[c]=-1;return n}return-1}let f;function _(t){f=t}function g(){if(!f)throw new Error("Function called outside component initialization");return f}function J(t){g().$$.on_mount.push(t)}function K(t){g().$$.after_update.push(t)}function L(t){g().$$.on_destroy.push(t)}function N(t,n){const e=t.$$.callbacks[n.type];e&&e.slice().forEach(c=>c.call(this,n))}const a=[],y=[];let s=[];const p=[],k=Promise.resolve();let b=!1;function v(){b||(b=!0,k.then(z))}function Q(){return v(),k}function O(t){s.push(t)}function R(t){p.push(t)}const d=new Set;let r=0;function z(){if(r!==0)return;const t=f;do{try{for(;r<a.length;){const n=a[r];r++,_(n),M(n.$$)}}catch(n){throw a.length=0,r=0,n}for(_(null),a.length=0,r=0;y.length;)y.pop()();for(let n=0;n<s.length;n+=1){const e=s[n];d.has(e)||(d.add(e),e())}s.length=0}while(a.length);for(;p.length;)p.pop()();b=!1,d.clear(),_(t)}function M(t){if(t.fragment!==null){t.update(),j(t.before_update);const n=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,n),t.after_update.forEach(O)}}function T(t){const n=[],e=[];s.forEach(c=>t.indexOf(c)===-1?n.push(c):e.push(c)),e.forEach(c=>c()),s=n}export{N as A,R as B,F as C,U as a,G as b,S as c,q as d,K as e,y as f,I as g,A as h,C as i,O as j,P as k,f as l,B as m,x as n,J as o,z as p,_ as q,j as r,D as s,Q as t,H as u,T as v,E as w,a as x,v as y,L as z};
